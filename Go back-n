#include <stdio.h>
#include <math.h>

#define WINDOW_SIZE 4

int main() {

    float transmission_time = 1.0, propagation_time = 4.0;

    float max_packets = (int)(1 + 2 * (propagation_time / transmission_time));

    int sequence_number_bits = log2(max_packets);

    int sender_window = WINDOW_SIZE; //pow(2, sequence_number_bits);

    double max_throughput = (sender_window / max_packets) * 100;

    printf("Maximum number of packets to be transmitted: %.0f\n", max_packets);
    printf("Number of bits in sequence number: %d\n", sequence_number_bits);
    printf("Sender's Window: %d\n", sender_window);
    printf("Maximum Throughput: %.2f%%\n", max_throughput);

    int transmitted = 0, acknowledged = 0;
    int time = 0;
    int round_trip_time = transmission_time + 2 * propagation_time;

    int lost_packet;
    printf("Enter the number of the lost packet (1-%d): ", (int)max_packets);
    scanf("%d", &lost_packet);

    int lost_retransmitted = 0;

    while (acknowledged < max_packets) {
        
        for (int i = 0; i < sender_window && transmitted < max_packets; i++) {
            time++;
            transmitted++;
            printf("At Time %d: ", time);
            printf("Transmitted: %d  ", transmitted);
            printf("Acknowledge: %d\n", acknowledged);

            if (transmitted == lost_packet && !lost_retransmitted) {
                printf("Packet %d lost! Retransmitting...\n", lost_packet);
                lost_retransmitted = 1;
                continue;
            }

            if (transmitted == max_packets) {
                break;
            }
        }

        for (int i = 0; i < sender_window && acknowledged < max_packets; i++) {
            time++;
            acknowledged++;
            printf("At Time %d: ", time);
            printf("Transmitted: %d  ", transmitted);
            printf("Acknowledge: %d\n", acknowledged);
        }
    }

    return 0;
}
